{"version":3,"sources":["logo.svg","repo/GithubRepository.js","components/HomeworkTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GithubRepository","this","octokit","Octokit","userAgent","log","debug","info","warn","console","error","request","agent","undefined","fetch","timeout","repoName","pulls","list","owner","repo","per_page","then","data","filter","pull","labels","some","label","catch","err","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","title","field","render","rowData","href","user","html_url","login","base","name","class","role","target","defaultGroupOrder","options","pageSize","grouping","defaultExpanded","HomeworkTable","state","classes","icons","isLoading","React","Component","withRouter","App","handleClickOpen","setState","dialogOpen","handleClose","bind","that","getReposToReview","className","Boolean","window","location","hostname","match","routing","path","component","ReactDOM","document","getElementById"],"mappings":"mLAAAA,EAAOC,QAAU,IAA0B,kC,8LC2C5BC,E,WAxCb,aAAe,oBACbC,KAAKC,QAAU,IAAIC,IAAQ,CACzBC,UAAW,qBACXC,IAAK,CACHC,MAAO,aACPC,KAAM,aACNC,KAAMC,QAAQD,KACdE,MAAOD,QAAQC,OAEjBC,QAAS,CACPC,WAAOC,EACPC,WAAOD,EACPE,QAAS,K,6DAKEC,GACf,OAAOf,KAAKC,QAAQe,MACjBC,KAAK,CACJC,MAAO,iBACPC,KAAMJ,EACNK,SAAU,MAEXC,MAAK,YACJ,OADkB,EAAXC,KACKC,QAAO,SAAAC,GACjB,OACEA,EAAKC,OAAOC,MAAK,SAAAC,GAEf,OAAO,KACJ,QAIVC,OAAM,SAAAC,GACLrB,QAAQJ,IAAIyB,U,qSCjBdC,EAAa,CACjBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACxDC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACzDE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACzDG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QAClEI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OACtB,kBAAC,IAAD,iBAAkBD,EAAlB,CAAyBC,IAAKA,QAEhCK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QACvDM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAaD,EAAb,CAAoBC,IAAKA,QAC5DO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAgBD,EAAhB,CAAuBC,IAAKA,QAC/DQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAeD,EAAf,CAAsBC,IAAKA,QACjES,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAcD,EAAd,CAAqBC,IAAKA,QAC/DU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAkBD,EAAlB,CAAyBC,IAAKA,QACnEW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OACvB,kBAAC,IAAD,iBAAiBD,EAAjB,CAAwBC,IAAKA,QAE/BY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QAC/Da,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QAC3Dc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAiBD,EAAjB,CAAwBC,IAAKA,QACnEe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACpEgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAgBD,EAAhB,CAAuBC,IAAKA,SAW/DiB,EAAU,CACd,CAAEC,MAAO,QAASC,MAAO,SACzB,CACED,MAAO,UACPE,OAAQ,SAAAC,GACN,OAAO,uBAAGC,KAAMD,EAAQE,KAAKC,UAAWH,EAAQE,KAAKE,SAGzD,CACEP,MAAO,kBACPE,OAAQ,SAAAC,GACN,OAAO,uBAAGC,KAAMD,EAAQK,KAAKzC,KAAKuC,UAAWH,EAAQK,KAAKzC,KAAK0C,QAGnE,CACEP,OAAQ,SAAAC,GACN,OACE,uBACEO,MAAM,0BACNN,KAAM,0BAA4BD,EAAQG,SAC1CK,KAAK,SACLC,OAAO,UAJT,iBAWN,CACEV,OAAQ,SAAAC,GACN,OACE,uBACEO,MAAM,4BACNN,KAAMD,EAAQG,SACdK,KAAK,SACLC,OAAO,UAJT,uBAWN,CACEZ,MAAO,QACPC,MAAO,iBACPY,kBAAmB,IAIjBC,EAAU,CACdC,SAAU,GACVC,UAAU,EACVC,iBAAiB,G,IA8BbC,E,kDACJ,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IACDsC,MAAQ,CACXpB,QAASA,EACTe,QAASA,GAJM,E,0GAWGlE,KAAKiC,MAAjBuC,QAER,OACE,kBAAC,IAAD,CACEC,MAAO3C,EACPqB,QAASnD,KAAKuE,MAAMpB,QACpB7B,KAAMtB,KAAKiC,MAAMX,KACjB8B,MAAM,GACNsB,UAAW1E,KAAKiC,MAAMyC,UACtBR,QAASlE,KAAKuE,MAAML,c,GArBAS,IAAMC,WA2BnBC,cAAWP,GC3GXQ,E,kDAhDb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAyBR8C,gBAAkB,WAChB,EAAKC,SAAS,CAAEC,YAAY,KA3BX,EA8BnBC,YAAc,WACZ,EAAKF,SAAS,CAAEC,YAAY,KA7B5B,EAAKV,MAAQ,CACXG,WAAW,EACXpD,KAAM,IAGR,EAAKyD,gBAAkB,EAAKA,gBAAgBI,KAArB,gBACvB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBARF,E,gEAYjB,IAAIC,EAAOpF,KAEXA,KAAKgF,SAAS,CACZN,WAAW,KAEb,IAAI3E,GAAmBsF,iBAAiB,gBAAgBhE,MAAK,SAAAL,GAC3DR,QAAQJ,IAAIY,GACZoE,EAAKJ,SAAS,CACZN,WAAW,EACXpD,KAAMN,S,+BAcV,OACE,yBAAKsE,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CACEZ,UAAW1E,KAAKuE,MAAMG,UACtBpD,KAAMtB,KAAKuE,MAAMjD,a,GAzCXqD,IAAMC,WCMJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,GACJ,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,EAAD,WAKvCC,IAASzC,OAAOsC,GAASI,SAASC,eAAe,W","file":"static/js/main.5dea28f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Octokit } from \"@octokit/rest\";\r\n\r\nclass GithubRepository {\r\n  constructor() {\r\n    this.octokit = new Octokit({\r\n      userAgent: \"CyfHomeworkTracker\",\r\n      log: {\r\n        debug: () => {},\r\n        info: () => {},\r\n        warn: console.warn,\r\n        error: console.error\r\n      },\r\n      request: {\r\n        agent: undefined,\r\n        fetch: undefined,\r\n        timeout: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  getReposToReview(repoName) {\r\n    return this.octokit.pulls\r\n      .list({\r\n        owner: \"CodeYourFuture\",\r\n        repo: repoName,\r\n        per_page: 100\r\n      })\r\n      .then(({ data }) => {\r\n        return data.filter(pull => {\r\n          return (\r\n            pull.labels.some(label => {\r\n              // return label.name === \"to-review\";\r\n              return true;\r\n            }) > 0\r\n          );\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport default GithubRepository;\r\n","import React, { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  }\r\n});\r\n\r\nconst columns = [\r\n  { title: \"Title\", field: \"title\" },\r\n  {\r\n    title: \"Student\",\r\n    render: rowData => {\r\n      return <a href={rowData.user.html_url}>{rowData.user.login}</a>;\r\n    }\r\n  },\r\n  {\r\n    title: \"Homework Module\",\r\n    render: rowData => {\r\n      return <a href={rowData.base.repo.html_url}>{rowData.base.repo.name}</a>;\r\n    }\r\n  },\r\n  {\r\n    render: rowData => {\r\n      return (\r\n        <a\r\n          class=\"btn btn-outline-primary\"\r\n          href={\"https://www.gitpod.io/#\" + rowData.html_url}\r\n          role=\"button\"\r\n          target=\"_blank\"\r\n        >\r\n          View Source\r\n        </a>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    render: rowData => {\r\n      return (\r\n        <a\r\n          class=\"btn btn-outline-secondary\"\r\n          href={rowData.html_url}\r\n          role=\"button\"\r\n          target=\"_blank\"\r\n        >\r\n          View Pull Request\r\n        </a>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    title: \"Label\",\r\n    field: \"labels[0].name\",\r\n    defaultGroupOrder: 0\r\n  }\r\n];\r\n\r\nconst options = {\r\n  pageSize: 20,\r\n  grouping: true,\r\n  defaultExpanded: true\r\n};\r\n\r\nfunction timestampToDate(timestamp) {\r\n  var a = new Date(timestamp);\r\n  var months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ];\r\n  var year = a.getFullYear();\r\n  var month = months[a.getMonth()];\r\n  var date = a.getDate();\r\n  var hour = a.getHours();\r\n  var min = a.getMinutes();\r\n  var sec = a.getSeconds();\r\n  var time =\r\n    date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n  return time;\r\n}\r\n\r\nclass HomeworkTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: columns,\r\n      options: options\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps() {}\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        columns={this.state.columns}\r\n        data={this.props.data}\r\n        title=\"\"\r\n        isLoading={this.props.isLoading}\r\n        options={this.state.options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(HomeworkTable);\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport GithubRepository from \"./repo/GithubRepository\";\nimport HomeworkTable from \"./components/HomeworkTable\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      data: []\n    };\n\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidMount() {\n    let that = this;\n\n    this.setState({\n      isLoading: true\n    });\n    new GithubRepository().getReposToReview(\"js-exercises\").then(pulls => {\n      console.log(pulls);\n      that.setState({\n        isLoading: false,\n        data: pulls\n      });\n    });\n  }\n\n  handleClickOpen = () => {\n    this.setState({ dialogOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ dialogOpen: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <HomeworkTable\n            isLoading={this.state.isLoading}\n            data={this.state.data}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n  <Router>\n    <div>\n      <Route path=\"/\" component={() => <App />} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}